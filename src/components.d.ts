/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}


declare global {

  namespace StencilComponents {
    interface Thumb01Product {
      'buttonText': string;
      'name': string;
      'thumb': string;
      'togglePopup': (e: any) => void;
    }
  }

  interface HTMLThumb01ProductElement extends StencilComponents.Thumb01Product, HTMLStencilElement {}

  var HTMLThumb01ProductElement: {
    prototype: HTMLThumb01ProductElement;
    new (): HTMLThumb01ProductElement;
  };
  interface HTMLElementTagNameMap {
    'thumb-01-product': HTMLThumb01ProductElement;
  }
  interface ElementTagNameMap {
    'thumb-01-product': HTMLThumb01ProductElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'thumb-01-product': JSXElements.Thumb01ProductAttributes;
    }
  }
  namespace JSXElements {
    export interface Thumb01ProductAttributes extends HTMLAttributes {
      'buttonText'?: string;
      'name'?: string;
      'onButtonClicked'?: (event: CustomEvent) => void;
      'thumb'?: string;
    }
  }
}


declare global {

  namespace StencilComponents {
    interface Thumb02Product {
      'buttonText': string;
      'description': string;
      'target': string;
      'thumb': string;
      'url': string;
    }
  }

  interface HTMLThumb02ProductElement extends StencilComponents.Thumb02Product, HTMLStencilElement {}

  var HTMLThumb02ProductElement: {
    prototype: HTMLThumb02ProductElement;
    new (): HTMLThumb02ProductElement;
  };
  interface HTMLElementTagNameMap {
    'thumb-02-product': HTMLThumb02ProductElement;
  }
  interface ElementTagNameMap {
    'thumb-02-product': HTMLThumb02ProductElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'thumb-02-product': JSXElements.Thumb02ProductAttributes;
    }
  }
  namespace JSXElements {
    export interface Thumb02ProductAttributes extends HTMLAttributes {
      'buttonText'?: string;
      'description'?: string;
      'target'?: string;
      'thumb'?: string;
      'url'?: string;
    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }

export declare function defineCustomElements(window: any): void;